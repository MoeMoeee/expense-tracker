{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","utils/format.js","components/Balance.js","components/CalculateExpenses.js","components/Transaction.js","components/TransactionHistory.js","components/AddTransaction.js","App.js","index.js"],"names":["Header","_jsx","_Fragment","children","className","state","action","type","_objectSpread","loading","transactions","payload","error","filter","transaction","_id","concat","_toConsumableArray","initialState","GlobalContext","createContext","GlobalProvider","_ref","_useReducer","useReducer","AppReducer","_useReducer2","_slicedToArray","dispatch","_getTransaction","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","t0","response","stop","apply","arguments","_deleteTransaction","_callee2","id","_context2","delete","_addTransaction","_callee3","config","_context3","headers","post","Provider","value","deleteTransaction","_x","addTransaction","_x2","getTransaction","numberWithCommas","x","toString","replace","Balance","total","useContext","map","amount","reduce","acc","item","toFixed","_jsxs","CalculateExpenses","amounts","income","expense","finalExpense","Math","abs","Transaction","activateDelete","text","onClick","xmlns","class","fill","viewBox","stroke","d","TransactionHistory","_useContext","useEffect","AddTransaction","_useState","useState","_useState2","setText","_useState3","_useState4","count","setCount","_useState5","_useState6","setAmount","onSubmit","e","preventDefault","newTransaction","parseInt","onChange","target","placeholder","App","ReactDOM","createRoot","document","getElementById","render","React","StrictMode"],"mappings":"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","file":"static/js/main.3706862d.chunk.js","sourcesContent":["import React from 'react'\n\nexport const Header = () => {\n  return (\n    <>\n    <h1 className=\"mt-3 font-bold text-center text-5xl\">Track Your Expenses</h1>\n    </>\n  )\n}\n","export default (state, action) => {\n    switch(action.type) {\n        case 'GET_TRANSACTION':\n            return {\n                ...state,\n                loading: false,\n                transactions: action.payload\n            }\n\n        case 'TRANSACTION_ERROR':\n            return {\n                ...state,\n                error: action.payload\n            }\n\n        case 'DELETE':\n            return {\n                ...state,\n                transactions: state.transactions.filter(transaction => transaction._id !== action.payload)\n            }\n\n        case 'ADD':\n            return {\n                ...state,\n                transactions: [...state.transactions, action.payload]\n            }\n        default:\n            return state;\n    }\n}","import { createContext, useReducer } from \"react\";\nimport AppReducer from \"./AppReducer\";\nimport axios from \"axios\";\n\nconst initialState = {\n    transactions: [],\n    error: null,\n    loading: true\n}\n\n//create context\nexport const GlobalContext = createContext(initialState);\n\n//provider component\nexport const GlobalProvider = ({children}) => {\n    const [state, dispatch] = useReducer(AppReducer, initialState);   \n    \n    // GET request from /api/v1/transactions\n    // to get the data store in the database\n    async function getTransaction () {\n        try {\n            const res = await axios.get('/api/v1/transactions');\n            \n            dispatch({\n                type: 'GET_TRANSACTION',\n                payload: res.data.data\n            });\n        } \n        \n        catch (error) {\n            dispatch({\n                type: 'TRANSACTION_ERROR',\n                payload: error.response.data\n            });\n        }\n    }\n\n\n    async function deleteTransaction (id) {\n        try {\n            await axios.delete(`/api/v1/transactions/${id}`);\n            \n            dispatch({\n                type: 'DELETE',\n                payload: id\n            });\n        } \n        \n        catch (error) {\n            dispatch({\n                type: 'TRANSACTION_ERROR',\n                payload: error.response.data\n            });\n        }\n    }\n\n    async function addTransaction (transaction) {\n        // send data in axios\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        try {\n            const res = await axios.post('/api/v1/transactions', transaction, config);\n            \n            dispatch({\n                type: 'ADD',\n                payload: res.data.data\n            });\n\n        } \n        \n        \n        catch (error) {\n            dispatch({\n                type: 'TRANSACTION_ERROR',\n                payload: error.response.data\n            });\n        }\n        \n    }\n\n    return (\n        <GlobalContext.Provider value={{\n            transactions: state.transactions,\n            deleteTransaction,\n            addTransaction,\n            getTransaction,\n            error: state.error,\n            loading: state.loading\n        }}>\n            {children}\n        </GlobalContext.Provider>\n    );\n}","export function numberWithCommas(x) {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}","import React, { useContext } from 'react'\nimport { GlobalContext } from '../context/GlobalState'\nimport { numberWithCommas } from '../utils/format';\n\nexport const Balance = () => {\n  const {transactions} = useContext(GlobalContext);\n  const amounts = transactions.map(transaction => transaction.amount)\n  const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\n  \n  return (\n    <div className='text-center mt-11'>\n        <div className='text-3xl mt-4 mb-2 font-bold'>Your balance is:</div>\n        <div className='font-bold text-3xl text-yellow-800'>${numberWithCommas(total)}</div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { GlobalContext } from '../context/GlobalState'\nimport { useContext } from 'react'\nimport { numberWithCommas } from '../utils/format'\n\nexport const CalculateExpenses = () => {\n    const {transactions} = useContext(GlobalContext);\n    const amounts = transactions.map(transaction => transaction.amount);\n    const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\n\n    const income = amounts\n        .filter(item => item > 0)\n        .reduce((acc, item) => (acc += item), 0)\n        .toFixed(2);\n\n    const expense = total - income;\n    const finalExpense = Math.abs(expense).toFixed(2);\n\n  return (\n    <div className='max-w-xs mx-auto flex justify-center bg-gray-300 p-5 space-x-2 m-5 shadow-gray-50 rounded-lg'>\n        <div className='mr-8 flex'>\n            <h4 className='font-extrabold text-lg'>INCOME\n            <div className='flex justify-center font-extrabold rounded-lg text-green-700 text-lg'>\n                ${numberWithCommas(income)}\n            </div>\n            </h4>\n        </div>\n\n        <div className='mx-auto flex'>\n            <h4 className='font-extrabold text-lg'>EXPENSE\n            <div className='text-center place-items-center justify-center font-extrabold text-red-700 text-lg'>\n                ${numberWithCommas(finalExpense)}\n            </div>\n            </h4>\n        </div>\n    </div>\n  )\n}\n","import React, { useContext } from 'react'\nimport { GlobalContext } from '../context/GlobalState';\nimport { numberWithCommas } from '../utils/format';\n\n\nexport const Transaction = ({transaction}) => {\n  const {deleteTransaction} = useContext(GlobalContext);\n\n  const activateDelete = () => {\n    deleteTransaction(transaction._id);\n  }\n\n  if (transaction.amount > 0) {\n    return (\n      <div className='mb-1'>\n        <div id={transaction._id} className=\"pl-4 flex grow text-white font-medium border-2.5 border-none bg-cyan-500 shadow-lg shadow-cyan-500/50 hover:bg-cyan-600 rounded-md\">\n          <span className='pt-1.5'>{transaction.text}</span>\n          <span className='pt-1.5 ml-auto mr-3'>\n            ${numberWithCommas(transaction.amount)}\n          </span>  \n\n          {/* delete button */}\n          <button className=\"px-2 py-2 inline-flex items-center bg-red-600 hover:bg-red-700 text-white text-lg font-lg rounded-sm\" onClick={activateDelete}>\n              <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n              </svg>\n          </button>\n        </div> \n      </div>\n    )\n  }\n\n  else {\n    return (\n    <div className='mb-1'>\n      <div id={transaction._id} className='pl-4 flex grow  text-white font-medium border-2 border-none bg-red-400 hover:bg-red-500 shadow-lg shadow-cyan-500/50 rounded-md'>\n        <span className='pt-1.5'>{transaction.text}</span>\n        <span className='pt-1.5 ml-auto mr-3'>-${Math.abs(numberWithCommas(transaction.amount))}</span>\n\n        {/* delete button */}\n        <button class=\"inline-flex items-center px-2 py-2 bg-red-600 hover:bg-red-700 text-white text-sm font-medium rounded-sm\" onClick={activateDelete}>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n                </svg>\n        </button>\n      </div>\n    </div>\n    )\n  }\n}\n","import React, { useContext, useEffect } from 'react'\nimport { GlobalContext } from '../context/GlobalState'\nimport { Transaction } from './Transaction';\n\nexport const TransactionHistory = () => {\n  const {transactions, getTransaction} = useContext(GlobalContext);\n\n  useEffect( () => {\n    getTransaction();\n  }, []\n  );\n\n  return (\n    <div className='text-center max-w-lg mx-auto'>\n      <div className='mb-4 text-2xl font-bold border-l-0 border-r-0 border-t-0 border-solid border border-gray-500 pb-4'>History</div>\n\n      {transactions.map(transaction => (\n        <Transaction\n          key = {transaction.id}\n          transaction = {transaction}\n        />\n      ))}\n\n    </div>\n  )\n}\n","import React, { useContext, useState } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\n\n\nexport const AddTransaction = () => {\n  const [text, setText] = useState('');\n  const [count, setCount] = useState(0);\n  const [amount, setAmount] = useState(0);\n  const {addTransaction} = useContext(GlobalContext);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    const newTransaction = {\n      id: count,\n      text, \n      amount: parseInt(amount)\n    }\n    \n    addTransaction(newTransaction);\n  }\n\n  return (\n    // allow to input the transaction type\n    <div className='max-w-lg mx-auto mt-10'>\n      <div className=' text-center text-2xl font-bold border-l-0 border-r-0 border-t-0 border-solid border border-gray-500 pb-4'>Add Transaction</div>\n      <div>\n        {/* the transaction type */}\n        <div className='mt-5 '>\n          <span className='font-bold text-xl'>Transaction Type:</span>  \n        </div>\n\n        {/*  create the form to input transaction type */}\n        <div className='max-w-lg rounded overflow-hidden my-5 mx-auto'>\n          <form onSubmit={onSubmit} className=\"w-full max-w-lg\">\n            <div className=\"flex items-center border-b-2 border-teal-500 py-2\">\n              <input onChange={e => setText(e.target.value)} className=\"appearance-none bg-transparent border-none w-full text-gray-700 mr-3 py-1 px-2 leading-tight focus:outline-none\" type=\"text\" placeholder=\"E.g. grocery, salary...\" />\n            </div>\n            \n            {/* transaction amount */}\n            <div className='mt-8'>\n              <span className='font-bold text-xl '>Amount: {\"\\n\"}</span>\n              <span className='font-bold text-xl'>\n                (Positive is Income, Negative is Expense)\n              </span>\n            </div>\n\n\n            {/*  create the form to input transaction type */}\n            <div className='max-w-lg rounded overflow-hidden my-5 mx-auto'>\n              <div className=\"flex items-center border-b-2 border-teal-500 py-2\">\n                <input onChange={e => setAmount(e.target.value)} className=\"appearance-none bg-transparent border-none w-full text-gray-700 mr-3 py-1 px-2 leading-tight focus:outline-none\" type=\"text\" placeholder=\"Enter the amount...\" />\n              </div>\n            </div>\n\n            {/*  create the button to add transaction */}\n            <div className='text-center'>\n              <button onClick={() => setCount({ count: count + 1 })} className=\"flex-shrink-0 bg-teal-500 hover:bg-teal-700 border-teal-500 hover:border-teal-700 text-sm border-4 text-white py-1 px-2 rounded\" type=\"submit\">\n                    Add Transaction\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n    )\n}\n","import React from 'react';\nimport { Header } from './components/Header';\nimport { Balance } from './components/Balance';\nimport { CalculateExpenses } from './components/CalculateExpenses';\nimport { TransactionHistory } from './components/TransactionHistory';\nimport { AddTransaction } from './components/AddTransaction';\nimport { GlobalProvider } from './context/GlobalState';\nimport './App.css';\n\nfunction App() {\n  return (\n  \n  <GlobalProvider>\n    <Header/>\n    <div className=\"containter\"> \n      <Balance/>\n      <CalculateExpenses/>\n      <TransactionHistory/>\n      <AddTransaction/>\n    </div>\n  </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport './assets/main.css';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n \nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);"],"sourceRoot":""}